Das Rebussystem, ett Hallonhack, baserat på BasPers perlhack
Trial and Error, 2011

För att anväda detta system behövs en webbserver med php-stöd
samt php-sqlite.

All information om ett specifikt rally ligger i en fil, t.ex. ht2011.php.

I denna fil finns förutom några sökvägar till rallyts filer även en
samling arrayer med data. Dessa är relativt självförklarande.
Dessa finns i dagsläget:

teams: En array som mappar lagnamn mot lagnummer och antal lagmedlemmar.

events: En ganska stor array innehåller alla rebusar, pyssel och plock.
De olika eventens kortnamn mappas mot deras fullständiga namn.
Kortnamnens begynnelsebokstav måste vara R för rebusar, 
S för stjälprebusar, P för pyssel, FP för fotoplock och TP för
tallriksplock.

parts: Här mappas rallyts etapper upp. Det är enligt denna gruppering
som presentationen kommer att visas. Det speciella kortnamnet '*sum*'
används för att summera resten av grenarna i en array. På detta sätt
kan man summera olika etapper, även med fördel rekursivt.

maxPoints: Pyssel mappas mot antal maxprickar i det pysslet. Om 
maxprickar finns för ett pyssel visas det i presentationen.

info: Här kan man mappa in specialinformation per gren. Denna info
visas på rättningssidan till stor hjälp för de stackars satar som
rättar. Man kan givetvis använda regexpar för att mappa.


När man har skapat sitt rallys php-fil (t.ex. ht2011.php) pekar
man ut den i filen rebus.php. I samma fil ställer man in
sökvägar till webbserverrooten dels lokalt på webbservern men
även för http-access.


All inmatad information finns i en sqlite-databas som skapas i
rallyts katalog om den inte finns. Filnamnet är 'db'. För att
rensa bort allt och börja med en ny databas är det bara att ta 
bort den filen. Se dock till att inte fler än en dator skapar
upp en ny databas. Det tar en liten stund att skapa upp den,
men när den väl finns på plats kan flera använda den samtidigt.


För att mata in resultat surfar man till r.php på servern.
Där möts man av en stor matris. Röd bakgrundsfärg betyder att
ingen har matat in något i den cellen. Vitt betyder att fältet
är inmatat. Grönt blir fältet om data matats in av någon annan
och du har fått det infört i ditt fält. Ajax!

Datat skickas till databasen när man lämnar en cell. Data hämtas
kontinuerligt från databasen, kolumn för kolumn. Tror det är någon
sekund mellan kolumnuppdateringarna, så det tar några minuter att
uppdatera hela matrisen.



När som helst kan man kika på presentationen genom att surfa till
present.php. Man navigerar mellan sidorna i presentationen genom 
att använda piltangenterna eller page up, page down. Vi använde
en trådlös presenterarmojt som var hårdkodad till page up, page down.

Det går att få länkar till individuella sidor i presentationen
genom att sätta index_links till 1 i rebus.php.



Det mesta av det grafiska går att justera med css. Just nu är det
en css-mall som heter style.css.


Man får automatiskt en bild-slide innan en viss gren om det finns
en bildfil med samma namn som grenen i rallyts katalog. T.ex: 
"grenFP 3.jpg" visas innan "Fotoplock Sträcka 3" som har 
kortnamnet "FP 3".

Man kan givetvis lägga in godtyckligt antal bild-slides manuellt.


För att generera en statisk presentation (ren html som inte behöver
en databas eller php) använder man static.php.

För att få upp presentationen på fler än en skärm samtidigt använder
man inte VNC (som vi gjorde...). Däremot kör man lämpligtvis med det 
nyutvecklade remote.php.
